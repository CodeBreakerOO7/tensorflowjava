name: CI build

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - staging
      - r[0-9]+.*
  pull_request:
    branches:
      - master
      - r[0-9]+.*
    types: [opened, reopened, synchronize, labeled, unlabeled]

env:
  DEPLOY_SNAPSHOT: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging') }}
  DEPLOY_RELEASE: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/r') }}

jobs:
  check-format:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    steps:
      - name: Configure Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build project
        run: |
          gcc --version
          mvn -version
          mvn clean install -Pjdk17 -B -U -e -Dlint.skip=true -Dmaven.test.skip=true
      - name: Run format checks
        run: |
          mvn spotless:check -Pjdk17 -B -U -e

  build:
    runs-on: ubuntu-22.04
    needs: check-format
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
        java-version: [11, 17]
    steps:
      - name: Configure Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build project
        run: |
          gcc --version || true
          clang --version || true
          mvn -version
          mvn clean install -B -U -e -Djavacpp.platform=${{ matrix.os }} -Djavacpp.platform.extension=""
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ matrix.os }}-java${{ matrix.java-version }}
          path: |
            target/*.jar
            target/*.zip

  release:
    if: env.DEPLOY_RELEASE == 'true' || env.DEPLOY_SNAPSHOT == 'true'
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts-ubuntu-22.04-java11
          path: build_artifacts
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Automated release from CI workflow running on ${{ github.ref_name }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build_artifacts/*.jar
          asset_name: tensorflow-java-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
